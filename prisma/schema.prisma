// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model usuario {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  rol          Rol
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  dispositivos dispositivo[]
}

model dispositivo {
  id            Int               @id @default(autoincrement())
  tipo          TipoDispositivo
  conexion      Conexion
  estado        EstadoDispositivo @default(INACTIVO)
  add_at        DateTime          @default(now())
  removed_at    DateTime?
  usuario       usuario           @relation(fields: [usuarioId], references: [id])
  usuarioId     Int
  cuentasGoogle cuenta_google[]
}

model cuenta_google {
  id                   Int                 @id @default(autoincrement())
  email                String              @unique
  estado               EstadoCuentaGoogle  @default(ACTIVO)
  dispositivo          dispositivo         @relation(fields: [dispositivoId], references: [id])
  dispositivoId        Int
  cuentasRedesSociales cuenta_red_social[]
}

model red_social {
  id                   Int                 @id @default(autoincrement())
  nombre               String
  descripcion          String?
  cuentasRedesSociales cuenta_red_social[]
}

model cuenta_red_social {
  id                              Int                               @id @default(autoincrement())
  email                           String                            @unique
  password                        String
  username                        String?
  estado                          EstadoCuentaRedSocial             @default(ACTIVO)
  created_at                      DateTime                          @default(now())
  cuentaGoogle                    cuenta_google                     @relation(fields: [cuentaGoogleId], references: [id])
  cuentaGoogleId                  Int
  redSocial                       red_social                        @relation(fields: [redSocialId], references: [id])
  redSocialId                     Int
  interaccionesTiktok             interaccion_programada_tiktok[]
  interaccion_programada_facebook interaccion_programada_facebook[]
}

model interaccion_programada_tiktok {
  id                   Int                              @id @default(autoincrement())
  nombre_cuenta_tiktok String
  url_video            String
  cantidad_vistas      Int
  dar_megusta          Boolean                          @default(false)
  guardar_video        Boolean                          @default(false)
  comentario           String?
  estado               EstadoInteraccionTikTok          @default(PENDIENTE)
  fecha_creacion       DateTime                         @default(now())
  fecha_finalizacion   DateTime?
  cuentaRedSocial      cuenta_red_social                @relation(fields: [cuentaRedSocialId], references: [id])
  cuentaRedSocialId    Int
  historiales          historial_interacciones_tiktok[]
}

model interaccion_programada_facebook {
  id                         Int                                @id @default(autoincrement())
  url_post                   String
  dar_megusta                Boolean                            @default(false)
  comentario                 String?
  cantidad_grupos_compartir  Int                                @default(0)
  tiempo_entre_publicaciones Int                                @default(0)
  estado                     EstadoInteraccionFacebook          @default(PENDIENTE)
  fecha_creacion             DateTime                           @default(now())
  fecha_finalizacion         DateTime?
  cuentaRedSocial            cuenta_red_social                  @relation(fields: [cuentaRedSocialId], references: [id])
  cuentaRedSocialId          Int
  historiales                historial_interacciones_facebook[]
}

model historial_interacciones_tiktok {
  id                            Int                           @id @default(autoincrement())
  estado                        EstadoHistorialTikTok
  vistas_totales                Int                           @default(0)
  megusta_aplicado              Boolean                       @default(false)
  video_guardado                Boolean                       @default(false)
  comentario_aplicado           Boolean                       @default(false)
  fecha_finalizacion            DateTime?
  interaccionProgramadaTiktok   interaccion_programada_tiktok @relation(fields: [interaccionProgramadaTiktokId], references: [id])
  interaccionProgramadaTiktokId Int
}

model historial_interacciones_facebook {
  id                              Int                             @id @default(autoincrement())
  estado                          EstadoHistorialFacebook
  gruposCompartidos               Int                             @default(0)
  megusta_aplicado                Boolean                         @default(false)
  comentario_aplicado             Boolean                         @default(false)
  fecha_finalizacion              DateTime?
  interaccionProgramadaFacebook   interaccion_programada_facebook @relation(fields: [interaccionProgramadaFacebookId], references: [id])
  interaccionProgramadaFacebookId Int
}

enum Rol {
  ADMINISTRADOR
  PERSONAL
}

enum TipoDispositivo {
  ANDROID
  IOS
}

enum Conexion {
  USB
  WIFI
}

enum EstadoDispositivo {
  ACTIVO
  INACTIVO
}

enum EstadoCuentaGoogle {
  ACTIVO
  INACTIVO
  BANEADO
}

enum EstadoCuentaRedSocial {
  ACTIVO
  INACTIVO
  SUSPENDIDO
  BANEADO
}

enum EstadoInteraccionTikTok {
  PENDIENTE
  EN_PROGRESO
  COMPLETADA
  FALLIDA
}

enum EstadoInteraccionFacebook {
  PENDIENTE
  EN_PROGRESO
  COMPLETADA
  FALLIDA
}

enum EstadoHistorialTikTok {
  COMPLETADA
  FALLIDA
}

enum EstadoHistorialFacebook {
  COMPLETADA
  FALLIDA
}
