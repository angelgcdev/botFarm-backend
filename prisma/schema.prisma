// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model user {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  role       Role
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  devices                         device[]
  scheduled_tiktok_interactions   scheduled_tiktok_interaction[]
  scheduled_facebook_interactions scheduled_facebook_interaction[]
  clients                         client[]
  sales                           sale[]
}

model device {
  id              Int          @id @default(autoincrement())
  user_id         Int
  udid            String
  device_type     DeviceType
  status          DeviceStatus @default(INACTIVO)
  os_version      String
  brand           String
  connected_at    DateTime     @default(now())
  last_activity   DateTime?
  complete_config Boolean      @default(false)
  user            user         @relation(fields: [user_id], references: [id], onDelete: Cascade)

  google_accounts google_account[]

  tiktok_interaction_histories   tiktok_interaction_history[]
  facebook_interaction_histories facebook_interaction_history[]
}

model google_account {
  id        Int                 @id @default(autoincrement())
  device_id Int
  email     String
  status    GoogleAccountStatus @default(ACTIVO)
  device    device              @relation(fields: [device_id], references: [id], onDelete: Cascade)

  social_network_accounts social_network_account[]

  @@unique([device_id, email])
}

model social_network {
  id   Int               @id @default(autoincrement())
  name SocialNetworkType

  social_network_accounts social_network_account[]
}

model social_network_account {
  id                Int                 @id @default(autoincrement())
  social_network_id Int
  google_account_id Int
  username          String
  password          String?
  status            SocialAccountStatus @default(ACTIVO)
  created_at        DateTime            @default(now())

  google_account google_account @relation(fields: [google_account_id], references: [id], onDelete: Cascade)
  social_network social_network @relation(fields: [social_network_id], references: [id])

  @@unique([google_account_id, social_network_id, username])
}

model scheduled_tiktok_interaction {
  id                 Int               @id @default(autoincrement())
  user_id            Int
  video_url          String
  views_count        Int               @default(0)
  liked              Boolean           @default(false)
  saved              Boolean           @default(false)
  shared_on_facebook Boolean           @default(false)
  comment            String?
  status             InteractionStatus @default(PENDIENTE)
  created_at         DateTime          @default(now())
  updated_at         DateTime          @updatedAt

  user user @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model scheduled_facebook_interaction {
  id                 Int               @id @default(autoincrement())
  user_id            Int
  post_url           String
  title_post         String?
  liked              Boolean           @default(false)
  comment            String?
  share_groups_count Int               @default(0)
  status             InteractionStatus @default(PENDIENTE)
  created_at         DateTime          @default(now())
  updated_at         DateTime          @updatedAt

  user user @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model tiktok_interaction_history {
  id                 Int           @id @default(autoincrement())
  device_id          Int? // Hacer opcional para permitir "huérfanos"
  username           String?
  total_views        Int           @default(0)
  liked              Boolean       @default(false)
  video_saved        Boolean       @default(false)
  shared_on_facebook Boolean       @default(false)
  commented          String?
  finished_at        DateTime?
  video_url          String?
  status             HistoryStatus @default(FALLIDA)

  device device? @relation(fields: [device_id], references: [id])
}

model facebook_interaction_history {
  id          Int           @id @default(autoincrement())
  device_id   Int? // Hacer opcional para permitir "huérfanos"
  post_url    String
  title_post  String?
  liked       Boolean       @default(false)
  comment     String?
  finished_at DateTime?
  status      HistoryStatus @default(FALLIDA)

  device                 device?                 @relation(fields: [device_id], references: [id])
  facebook_shared_groups facebook_shared_group[] // relación 1:N
}

model facebook_shared_group {
  id                           Int                          @id @default(autoincrement())
  name                         String
  history_id                   Int
  facebook_interaction_history facebook_interaction_history @relation(fields: [history_id], references: [id], onDelete: Cascade)
}

model client {
  id         Int      @id @default(autoincrement())
  user_id    Int?
  name       String?
  ci         String   @unique
  phone      String?
  email      String?
  city       String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  user  user?  @relation(fields: [user_id], references: [id])
  sales sale[]
}

model sale {
  id            Int          @id @default(autoincrement())
  client_id     Int? // Hacer opcional para permitir "huérfanos"
  user_id       Int? // permitir "huérfanos"
  total         Float?
  client_origin ClientOrigin
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt

  client client? @relation(fields: [client_id], references: [id])
  user   user?   @relation(fields: [user_id], references: [id])
}

enum ClientOrigin {
  TIKTOK
  FACEBOOK
  RECOMENDACION
  OTRO
}

enum Role {
  ADMINISTRADOR
  PERSONAL
}

enum DeviceType {
  FISICO
  EMULADOR
}

enum DeviceStatus {
  ACTIVO
  INACTIVO
}

enum GoogleAccountStatus {
  ACTIVO
  INACTIVO
  BANEADO
}

enum SocialAccountStatus {
  ACTIVO
  INACTIVO
  SUSPENDIDO
  BANEADO
}

enum InteractionStatus {
  PENDIENTE
  EN_PROGRESO
  COMPLETADA
  FALLIDA
  CANCELADO
}

enum HistoryStatus {
  COMPLETADA
  FALLIDA
}

enum SocialNetworkType {
  TIKTOK
  FACEBOOK
}
